spring:
  application:
    name: gateway
  data:
    redis:
      host: 192.168.1.108
      port: 6379
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]': # Applique les règles CORS à toutes les routes
            allowedOrigins: "http://localhost:8080"  # Autorise les requêtes depuis le gateway
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
            allowedHeaders: "*"
            allowCredentials: true
      routes:
        - id: backend
          uri: lb://backend
          predicates:
            - Path=/api/patients/**
          filters:
            - PreserveHostHeader  # Assurer que le Host header est préservé
            - AddRequestHeader=X-Forwarded-For, localhost
            - AddRequestHeader=X-Forwarded-Proto, http
            - AddRequestHeader=X-Forwarded-Host, localhost:8080
        - id: frontend
          uri: lb://frontend
          predicates:
            - Path=/patients/**
          filters:
            - PreserveHostHeader  # Assurer que le Host header est préservé
            - AddRequestHeader=X-Forwarded-For, localhost
            - AddRequestHeader=X-Forwarded-Proto, http
            - AddRequestHeader=X-Forwarded-Host, localhost:8080
        - id: note
          uri: lb://note
          predicates:
            - Path=/api/notes/**
          filters:
            - PreserveHostHeader  # Assurer que le Host header est préservé
            - AddRequestHeader=X-Forwarded-For, localhost
            - AddRequestHeader=X-Forwarded-Proto, http
            - AddRequestHeader=X-Forwarded-Host, localhost:8080
        - id: risklevel
          uri: lb://risklevel
          predicates:
            - Path=/api/risklevels/**
          filters:
            - PreserveHostHeader  # Assurer que le Host header est préservé
            - AddRequestHeader=X-Forwarded-For, localhost
            - AddRequestHeader=X-Forwarded-Proto, http
            - AddRequestHeader=X-Forwarded-Host, localhost:8080
        - id: security
          uri: lb://security
          predicates:
            - Path=/login, /auth/**
          filters:
            - PreserveHostHeader  # Assurer que le Host header est préservé
            - AddRequestHeader=X-Forwarded-For, localhost
            - AddRequestHeader=X-Forwarded-Proto, http
            - AddRequestHeader=X-Forwarded-Host, localhost:8080

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8010/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    leaseRenewalIntervalInSeconds: 30
    leaseExpirationDurationInSeconds: 90


logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  level:
    com:
      medilabo:
        gateway: INFO
        gateway.config: DEBUG
    org:
      springframework:
        security: DEBUG
        cloud:
          gateway: DEBUG
          gateway.route: DEBUG
          client:
            loadbalancer: DEBUG
